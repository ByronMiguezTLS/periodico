name: Fix deps + Rebuild

on:
  workflow_dispatch:

permissions:
  contents: write

jobs:
  fix:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Ensure requirements (numpy + nltk)
        run: |
          touch requirements.txt
          grep -qi '^feedparser' requirements.txt || echo "feedparser==6.0.11" >> requirements.txt
          grep -qi '^beautifulsoup4' requirements.txt || echo "beautifulsoup4==4.12.3" >> requirements.txt
          grep -qi '^requests' requirements.txt || echo "requests==2.32.3" >> requirements.txt
          grep -qi '^lxml' requirements.txt || echo "lxml==5.2.2" >> requirements.txt
          grep -qi '^sumy' requirements.txt || echo "sumy==0.11.0" >> requirements.txt
          grep -qi '^PyYAML' requirements.txt || echo "PyYAML==6.0.2" >> requirements.txt
          # ðŸ‘‡ lo que faltaba
          grep -qi '^numpy' requirements.txt || echo "numpy>=1.26,<3" >> requirements.txt
          grep -qi '^nltk' requirements.txt || echo "nltk==3.8.1" >> requirements.txt

      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Download NLTK data (punkt & punkt_tab)
        run: |
          python - <<'PY'
          import nltk
          nltk.download('punkt', quiet=True)
          try:
              nltk.download('punkt_tab', quiet=True)
          except Exception as e:
              print("punkt_tab no disponible, continuo:", e)
          PY

      - name: Add safe fallback in build.py (if missing)
        run: |
          python - <<'PY'
          import io,sys,os,re
          p="build.py"
          src=open(p,encoding="utf-8").read()
          if "def summarize_text(" in src and "def _fallback_summary" not in src:
              patch = '''
          def _fallback_summary(text, max_sentences=3):
              # Plan B: extractivo muy simple si fallan sumy/numpy/nltk
              import re
              s = re.split(r'(?<=[.!?])\\s+', text)
              return " ".join(s[:max_sentences])

          '''
              src = src.replace("def summarize_text", patch + "\ndef summarize_text", 1)
              src = src.replace(
                  "sents = summarizer(parser.document, sentences)\n    return \" \".join(str(s) for s in sents)",
                  "try:\n        sents = summarizer(parser.document, sentences)\n        return \" \".join(str(s) for s in sents)\n    except Exception:\n        return _fallback_summary(text, sentences)"
              )
              open(p,"w",encoding="utf-8").write(src)
          PY

      - name: Build now
        run: python build.py

      - name: Commit & push
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add requirements.txt build.py docs/data
          git commit -m "fix: add numpy + nltk data; robust summarize; rebuild" || echo "Sin cambios"
          git push
